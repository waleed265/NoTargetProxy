name: Apigee_CICD_Pipeline_MAF_2
on:
  pull_request:
    types: [opened]
    branches:
    - UAT
    #- DEV
  
  # push:
    # branches:
    # - main
    # - DEV
    
  workflow_dispatch:
    branches:
    - DEV

env:
  ProxyName: NoTargetProxy
  
jobs:

   Pre-Deployment:
    runs-on: ubuntu-latest 
    steps:
     - name: Checkout Repository
       uses: actions/checkout@v2
    
     - name: Unit-Test-With-Coverage
       run: cd ${{ github.workspace }}/apigee-cicd-master && npm install && npm test test/unit/*.js && npm run coverage test/unit/*.js
      
     - name: Coverage
       run: cd ${{ github.workspace }}/apigee-cicd-master/coverage && ls 
      
     - name: Publish Unit Test Results
       uses: EnricoMi/publish-unit-test-result-action@v1
       if: always()
       with:
        files: ${{ github.workspace }}/**/test-results.xml    
      
     - name: Cobertura Coverage Report
       uses: 5monkeys/cobertura-action@master
       with:
        path: ${{ github.workspace }}/apigee-cicd-master/coverage/cobertura-coverage.xml
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        minimum_coverage: 75
        skip_covered: false
        fail_below_threshold: true
        show_line: true
        show_branch: true
        show_class_names: true
        show_missing: true
        only_changed_files: false
    
     - name: Policy-Code-Analysis
       run: |
        cd ${{ github.workspace }}/apigee-cicd-master
        sudo npm install -g apigeelint
        apigeelint -s ${{ env.ProxyName }}/apiproxy -f table.js
        apigeelint -s ${{ env.ProxyName }}/apiproxy -f html.js > ${{ github.workspace }}/reports/apigeelint.html
        
     - name: Publishing Apigee Lint Report to Artifacts
       uses: actions/upload-artifact@v2
       if: always()
       with:
        name: Apigee Lint Report
        path: ${{ github.workspace }}/reports/apigeelint.html
        
     - name: commit-status-update
       uses: ouzi-dev/commit-status-updater@v1.1.0
       continue-on-error: true
       if: always()
       with:
        status: "${{ job.status }}"
        addHoldComment: "true"
        pendingComment: "Pre-Deployment stage pending!"
        successComment: "Pre-Deployment stage succeeded!"
        failComment: "Pre-Deployment stage failed!"
     
     - name: Microsoft Teams Notification
       uses: skitionek/notify-microsoft-teams@master
       if: always()
       with:
        webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        needs: ${{ toJson(needs) }}
        job: ${{ toJson(job) }}
        steps: ${{ toJson(steps) }}
